(define (sqrt-iter guess x)
  (if (good-enough? guess x)
      guess
      (sqrt-iter (improve guess x) x)))
;(define (good-enough? res x)
;  (= (improve res x) res))
(define (improve guess x)
  (average guess (/ x guess)))
(define (average x y)
  (/ (+ x y) 2))
(define (square x) (* x x))
(define (sqrt x)
  (if (= x 0.) 0.
      (sqrt-iter 1.0 x)))
(define (good-enough? guess x)
  (< (abs (- x (square guess)))
     (* x 0.00001)))
