;; (square-list (list 1 2 3 4))
;; 预期 (1 4 9 16)
(define (square-list items)
  (if (null? items)
      ()
      (cons <??> <??>)))
(square-list (list 1 2 3 4))

(define (square x) (* x x))
(define (square-list items)
  (if (null? items)
      ()
      (cons (square (car items)) (square-list (cdr items)))))
(square-list (list 1 2 3 4))


(define (square-list items)
  (map <??> <??>))

(define (map proc items)
  (if (null? items)
      ()
      (cons (proc (car items))
            (map proc (cdr items)))))
(define (square-list items)
  (map (lambda (x) (* x x))
       items)
  )
(square-list (list 1 2 3 4))

